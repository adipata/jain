Version 1.1

* load : Load an external key
load [name] [algorithm] [data] [type]
- name : unique key name to identify the key
- algorithm : rsa,aes,3des
- data : HEX ASCII representation of the key
- type : pub,priv,secret

* list : List all saved keys

* gen : Generate a new key
gen [name] [algorithm] [size]
- name : key name
- algorithm : aes,rsa
- size : key size in bits; 128,256 for AES; 1024,2048 for RSA

* get : Print key details
get [name]
- name : key name

* delete : Delete a key
delete [name]
- name : key name; if the name is "all", all keys are deleted

* enc : Encrypt data
enc [name] [data] [option] [iv]
- name : key name
- data : data to encrypt in HEX ASCII
- option : cbc,ecb
- iv : initialization vector in HEX ASCII

* dec : Decrypt data
dec [name] [data] [option] [iv] [pad]
- name : key name
- data : data to decrypt in HEX ASCII
- option : cbc,ecb
- iv : initialization vector in HEX ASCII
- pad : pad,nopad,oaep(for asymmetric only)

* b2h : Base64 to HEX ASCII
b2h [data]
- data : Base64 input data

* h2b : HEX ASCII to Bas64
b2h [data]
- data : HEX ASCII input data

* methods : Gets available cipher methods

* uuid : Generate UUID v4
uuid [count] [format]
- count : How many UUIDs to generate
- format : Specify 'h' if the desired output is as HEX. Ex: 0x8380622b8ebf4868a7f23fe911a6d24d

BUFFER DATA
==========

* sf : Select a file to upload into buffer

* bu : Upload the selected file into buffer

* bl : List the content of the buffer

* bg : Get the content of a buffer item
bg [id] [format]
- id : id of the buffer item
- format : h-HEX b-Base64 (default is HEX)